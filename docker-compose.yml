version: "3.4"
services:
    vpn:
        container_name: vpn
        image: ghcr.io/bubuntux/nordlynx
        cap_add:
        - NET_ADMIN #required
        - NET_RAW
        restart: unless-stopped
        environment:
        - NET_LOCAL=${NETWORK}
        - PRIVATE_KEY=${PRIVATE_KEY}
        - TZ=${TZ}
        ports:
        - 8112:8112 # Deluge web UI and download daemon

    # transmission:
    #   image: linuxserver/transmission:latest
    #   container_name: transmission
    #   restart: unless-stopped
    #   network_mode: service:openvpn # run on the vpn network
    #   environment:
    #     - PUID=${PUID} # default user id, defined in .env
    #     - PGID=${PGID} # default group id, defined in .env
    #     - TZ=${TZ} # timezone, defined in .env
    #   volumes:
    #     - ${ROOT}/downloads:/downloads # downloads folder
    #     - ${CONFIG}/config/transmission:/config # config files

    deluge:
        container_name: deluge
        image: linuxserver/deluge:latest
        restart: unless-stopped
        network_mode: service:openvpn # run on the vpn network
        environment:
        - PUID=${PUID} # default user id, defined in .env
        - PGID=${PGID} # default group id, defined in .env
        - TZ=${TZ} # timezone, defined in .env
        volumes:
        - ${ROOT}/downloads:/downloads # downloads folder
        - ${CONFIG}/config/deluge:/config # config files

    prowlarr:
        container_name: prowlarr
        image: linuxserver/prowlarr:nightly
        restart: unless-stopped
        network_mode: host
        environment:
        - PUID=${PUID} # default user id, defined in .env
        - PGID=${PGID} # default group id, defined in .env
        - UMASK=002
        - TZ=${TZ} # timezone, defined in .env
        volumes:
        - /etc/localtime:/etc/localtime:ro
        - ${CONFIG}/config/prowlarr:/config # config files
        - ${ROOT}/downloads/torrent-blackhole:/downloads # place where to put .torrent files for manual download

    sonarr:
        container_name: sonarr
        image: linuxserver/sonarr:latest
        restart: unless-stopped
        network_mode: host
        environment:
        - PUID=${PUID} # default user id, defined in .env
        - PGID=${PGID} # default group id, defined in .env
        - TZ=${TZ} # timezone, defined in .env
        volumes:
        - /etc/localtime:/etc/localtime:ro
        - ${CONFIG}/config/sonarr:/config # config files
        - ${ROOT}/tv:/tv # tv shows folder
        - ${ROOT}/downloads:/downloads # download folder

    radarr:
        container_name: radarr
        image: linuxserver/radarr:latest
        restart: unless-stopped
        network_mode: host
        environment:
        - PUID=${PUID} # default user id, defined in .env
        - PGID=${PGID} # default group id, defined in .env
        - TZ=${TZ} # timezone, defined in .env
        volumes:
        - /etc/localtime:/etc/localtime:ro
        - ${CONFIG}/config/radarr:/config # config files
        - ${ROOT}/movies:/movies # movies folder
        - ${ROOT}/downloads:/downloads # download folder

    bazarr:
        container_name: bazarr
        image: linuxserver/bazarr:latest
        restart: unless-stopped
        environment:
        - PUID=${PUID} # default user id, defined in .env
        - PGID=${PGID} # default group id, defined in .env
        - TZ=${TZ} # timezone, defined in .env
        volumes:
        - ${CONFIG}/config/bazarr:/config # config files
        - ${ROOT}/movies:/movies # movies folder, same as Radarr
        - ${ROOT}/tv:/tv # tv shows folder, same as Sonarr
        ports:
        - 6767:6767

    plex-server:
        container_name: plex-server
        image: linuxserver/plex:latest
        restart: unless-stopped
        network_mode: host
        environment:
        - PUID=${PUID} # default user id, defined in .env
        - PGID=${PGID} # default group id, defined in .env
        - TZ=${TZ} # timezone, defined in .env
        - VERSION=docker
        volumes:
        - ${CONFIG}/config/plex/db:/config # plex database
        - ${CONFIG}/config/plex/transcode:/transcode # temp transcoded files
        - ${ROOT}/tv:/data/tvshows # tvshows library
        - ${ROOT}/movies:/data/movies # tvshows library

volumes:
      yacht: